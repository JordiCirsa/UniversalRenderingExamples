Build_Player_With_Tests_iOS:
  name: Build Players with tests iOS
  variables:
    UNITY_BRANCH: trunk
    GRAPHICS_BRANCH: master
  agent:
      # Do not choose machines with gpus or connected devices to perform this step
      # If it takes a lot of time to compile your project prefer flavor with more cores.
      # see https://internaldocs.hq.unity3d.com/bokken/reference/flavors/
      type: Unity::VM::osx
      image: slough-ops/macos-10.14-xcode:stable
      flavor: b1.large
  commands:
    - git clone git@github.com:Unity-Technologies/Graphics.git && cd Graphics && git checkout $GRAPHICS_BRANCH
    - ls 
    - brew tap --force-auto-update unity/unity git@github.cds.internal.unity3d.com:unity/homebrew-unity.git
    - brew install unity-config
    - unity-config project add dependency "com.unity.render-pipelines.core@file:../Graphics/com.unity.render-pipelines.core" --project-path .
    - unity-config project add dependency "com.unity.render-pipelines.universal@file:../Graphics/com.unity.render-pipelines.universal" --project-path .
    - unity-config project add dependency "com.unity.shadergraph@file:../Graphics/com.unity.shadergraph" --project-path .
    - unity-config project add dependency com.unity.test-framework@1.1.29 --project-path .
    - unity-config project add testable com.unity.render-pipelines.core  --project-path .
    - unity-config project add testable unity.graphictests.performance.universal  --project-path .
    - unity-config project set project-update false --project-path .
    - pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
    # note: --fast tells unity downloader to get the latest available version editor. 
    # Saves some time in case if editor is building after batch landed to trunk
    # You might want to remove it in our production environment.
    - unity-downloader-cli -c Editor -c iOS -u $UNITY_BRANCH --wait --fast
    - curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
    - chmod +x ./utr
    - ./utr --suite=playmode --platform=iOS --editor-location=.Editor --testproject=. --testfilter=UniversalRenderingExamples --player-save-path=build/players --artifacts_path=build/logs --architecture=ARM64 --build-only
  artifacts:
    players:
        paths:
          - "build/players/**"
    logs:
        paths:
          - "build/logs/**"

Run_Player_With_Tests_iOS:
  name: Run Test on an iOS player
  variables:
    UNITY_BRANCH: trunk
  # no need to clone repo
  skip_checkout: true
  agent:
      # Running tests is fast, building it not requried, therefore flavor can be smaller. see https://internaldocs.hq.unity3d.com/bokken/reference/flavors/
      # Now we can use an 'expensive' type. 
      type: Unity::mobile::iPhone
      image: mobile/macos-10.15-testing:stable
      flavor: b1.medium
  dependencies:
    - .yamato/ios.yml#Build_Player_With_Tests_iOS
  commands:
    - curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr  --output utr
    - chmod +x ./utr
    - ./utr --suite=playmode --platform=iOS --player-load-path=build/players --testfilter=UniversalRenderingExamples --artifacts_path=build/test-results
  artifacts:
    logs:
        paths:
          - "build/test-results/**"
